---
import "../style/style.css";
const { eventdata } = Astro.props;

function formatDate(dateString) {
  // funktionen laves, der tager en dato som tekst
  const date = new Date(dateString); // her laves det om til et Date-objekt, som javascript forstår
  return new Intl.DateTimeFormat("da-DK", {
    // formaterer datoen om til da-DK som er dansk
    weekday: "long", // giver fx lørdag
    day: "numeric", // dato
    month: "long", // måned
    year: "numeric", // år
  }).format(date); // denne gør det hele til en læsbar tekst, som giver fx lørdag den 14. juni 2025
}

function capitalizeFirstLetter(str) {
  // funktionen tager fat i en tekst fx lørdag
  return str.charAt(0).toUpperCase() + str.slice(1); // str.charAt(0) tager fat i første bogstav, .toUppercase() gør det til et stort bogstav, str.slice(1) tager resten af teksten og sætter ind fx "ørdag den 14. juni"
} // alt dette bliver til Lørdag den 14. juni 2025

function formatTimeRange(startTime, endTime) {
  // funktionen tager fat i to tidspunkter, starttid og sluttid
  const format = (time) => {
    // her laves en funktion
    const [hour, minute] = time.split(":"); // time.split(":") deler 09:00 op i 09 og 00
    return `${hour}.${minute}`; // her sættes 09:00 og 00 sammen med punktil til 09.00
  };
  return `${format(startTime)}–${format(endTime)}`; // funktionen bruges to gange med starttid og sluttid, så det bliver til 09.00-12.00
}
---

<article>
  <img src={`/workshop/${eventdata.img}`} />
  <div class="info">
    <h2>{eventdata.title}</h2>
    <p>{eventdata.adress}</p>
    <p class="bold">{capitalizeFirstLetter(formatDate(eventdata.date))}</p>
    <!-- her bruges funktionen som gør startbogstavet til stort bogstav, sammen med funktionen som gør datoen til da-DK -->
    <p class="time">{formatTimeRange(eventdata.time, eventdata.time_end)}</p>
    <!-- her bruges funktionen til at formaterer tidspunktet -->
    <p class="description">{eventdata.description}</p>
    <div class="laes-mere">
      <label for="workshop1">Læs mere </label>
      <div class="content">
        <p>{eventdata.read_more}</p>
        <p><strong>Pris: </strong>{eventdata.price}</p>
      </div>
      <a href="">Tilmeld her</a>
    </div>
  </div>
</article>

<!-- javascript for at gøre toggle dimmeren klikbar -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    // betyder: når sidens indhold er loadet, så starter koden
    const toggleBoxes = document.querySelectorAll(".laes-mere");
    // betyder: 'querySelectorAll' betyder den vælger alle med classen '.laes-mere', ikke kun den første

    toggleBoxes.forEach((box) => {
      const label = box.querySelector("label");
      const content = box.querySelector(".content");
      // betyder: inde i boxen finder vi 'label' og 'content'

      content.classList.add("usynlig"); // denne linje sørger for at indholdet er skjult ved sideindlæsning

      label.addEventListener("click", () => {
        // betyder: når man klikker på label altså "læs mere/læs mindre"
        content.classList.toggle("usynlig");
        // betyder: fjerner eller tilføjer klassen "usynlig" så teksten vises eller ej

        // opdater teksten på label fra læs mere til læs mindre
        label.textContent = content.classList.contains("usynlig")
          ? "Læs mere"
          : "Læs mindre";
        // betyder: dette gør at teksten ændrer sig fra læs mere og læs mindre
      });
    });
  });
</script>

<style>
  /*************** Reset *********************/
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  img {
    width: 100%;
    height: auto;
    display: block;
  }
  /*************** Reset *********************/

  /* v------------------------- harmonika-halløjsa -------------------------v */
  .laes-mere {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
  .content {
    grid-column: 1 / span 2;
  }

  .usynlig {
    display: none;
  }

  a {
    place-self: end;
    grid-column: 2;
  }

  .laes-mere,
  article {
    background: var(--beige);
  }

  label {
    font-family: var(--font-p);
    color: var(--mediumgreen);
  }

  label:hover {
    color: var(--lightgreen);
    text-decoration: underline;
  }

  article {
    margin: 20px 20px 60px 20px;
    padding: 30px 20px 20px 30px;
  }

  p,
  h2 {
    color: var(--darkgreen);
    margin: 10px 0 0 0;
  }

  h2 {
    margin: 20px 0 0 0;
  }

  .bold {
    font-weight: bolder;
  }

  .time {
    margin: -2px 0 0 0;
  }

  .description {
    margin: 20px 0 20px 0;
  }

  .content {
    padding: 10px 0 0 0;
    line-height: 26px;
  }

  a {
    display: grid;
    justify-self: end;
    color: var(--beige);
    text-decoration: none;
    background-color: var(--rosa);
    padding: 10px;
    text-align: center;
    font-family: var(--font-p);
    padding: 5px 10px 5px 10px;
  }

  a:hover {
    background-color: var(--darkgreen);
  }

  /* v------------------------ desktop styliiing ------------------------v */
  @media (min-width: 820px) {
    article {
      display: grid;
      grid-template-columns: 1fr 2fr;
      margin-left: 100px;
      margin-right: 100px;
    }

    h2,
    p {
      margin: 5px 0 0 15px;
    }

    p {
      margin: 10px 0 0 15px;
    }

    .time {
      margin: 10px 0 0 15px;
    }

    .description {
      margin: 20px 0 65px 15px;
    }

    label {
      margin: 0 0 0 15px;
    }
  }
</style>
